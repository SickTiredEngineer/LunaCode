<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itwillbs.luna_code.mapper.usermain.ClassStatisticMapper">
	
	<!-- 최근 6개월간의 월별 수익 통계 조회 -->
    <select id="selectRecentMonthlyRevenue" resultType="java.util.Map">
        select
			   date_format(ph.pay_date, '%y-%m') as month
			 , sum(ph.amount) as revenue
		  from payment_history ph
		  join class cl on ph.item_idx = cl.class_idx
		 where cl.instructor_idx = #{instructor_idx}
		   and ph.pay_date >= last_day(now() - interval 6 month) + interval 1 day
	  group by date_format(ph.pay_date, '%y-%m')
	  order by month asc;

    </select>
    
	<!-- 최근 등록한 신규 수강생 목록 조회 -->
	<select id="selectRecentNewStudents" resultType="com.itwillbs.luna_code.vo.usermain.NewStudentVO">
        select 
		       m.user_name
		     , c.class_title
		     , ce.enroll_date
		  from class_enrollment ce
		  join member m on ce.user_idx = m.idx
		  join class c on ce.class_idx = c.class_idx
		 where c.instructor_idx = #{instructor_idx}
	  order by ce.enroll_date desc
		 limit 50;
    </select>
	
	<!-- 4개의 요약 카드 데이터를 한 번에 조회 -->
	<select id="selectStatisticsSummary" resultType="com.itwillbs.luna_code.vo.usermain.ClassStatisticSummaryVO">
	    select
	        -- 1. 이번 달 수익 (이번 달 1일부터)
	        (
	            select ifnull(sum(ph.amount), 0)
	              from payment_history ph
	              join class c on ph.item_idx = c.class_idx
	             where c.instructor_idx = #{instructor_idx}
	               and ph.pay_date >= date_format(now(), '%Y-%m-01')
	        ) as monthlyrevenue,
	        
	        -- 2. 전체 기간 수익
	        (
	            select ifnull(sum(ph.amount), 0)
	              from payment_history ph
	              join class c on ph.item_idx = c.class_idx
	             where c.instructor_idx = #{instructor_idx}
	        ) as totalrevenue,
	        
	        -- 3. 이번 달 신규 수강생 수
	        (
	            select count(*)
	              from class_enrollment ce
	              join class c on ce.class_idx = c.class_idx
	             where c.instructor_idx = #{instructor_idx}
	               and ce.enroll_date >= date_format(now(), '%Y-%m-01')
	        ) as newstudentcount,
	        
	        -- 4. 전체 수강생 수
	        (
	            select count(distinct ce.user_idx)
	              from class_enrollment ce
	              join class c on ce.class_idx = c.class_idx
	             where c.instructor_idx = #{instructor_idx}
	        ) as totalstudentcount
	</select>
	
	<!-- 월별 신규 수강생 수를 조회 -->
	<select id="selectMonthlyNewStudentCounts" resultType="java.util.Map">
	    select
	           date_format(ce.enroll_date, '%Y-%m') as month
	         , count(*) as student_count
	      from class_enrollment ce
	      join class c on ce.class_idx = c.class_idx
	     where c.instructor_idx = #{instructor_idx}
	       and year(ce.enroll_date) = year(now()) -- 올해 데이터만 조회
	  group by date_format(ce.enroll_date, '%Y-%m')
	  order by month asc
	</select>
	
	<!--  최근 달린 '수강생 후기' 목록 조회 -->
    <select id="selectRecentReviews" resultType="com.itwillbs.luna_code.vo.usermain.NewReviewVO">
        select
               cr.content
             , c.class_title
             , m.user_name
             , cr.created_at
          from class_review cr
          join class c on cr.class_id = c.class_idx
          join member m on cr.user_idx = m.idx
         where c.instructor_idx = #{instructor_idx}
           and cr.is_visible = true -- 공개된 후기만 가져오도록 (is_visible이 boolean/tinyint(1) 타입일 경우)
      order by cr.created_at DESC
         limit 20
    </select>
	
	
</mapper>